package iso20022

// Payment token information.
type CardPaymentToken1 struct {

	// Additional token payment information.
	TokenCharacteristic []*Max35Text `xml:"TknChrtc,omitempty"`

	// Identifier of a token provider requestor.
	TokenRequestor *PaymentTokenIdentifiers1 `xml:"TknRqstr,omitempty"`
}

func (c *CardPaymentToken1) AddTokenCharacteristic(value string) {
	c.TokenCharacteristic = append(c.TokenCharacteristic, (*Max35Text)(&value))
}

func (c *CardPaymentToken1) AddTokenRequestor() *PaymentTokenIdentifiers1 {
	c.TokenRequestor = new(PaymentTokenIdentifiers1)
	return c.TokenRequestor
}

// Payment token information.
type CardPaymentToken2 struct {

	// Additional token payment information.
	TokenCharacteristic []*Max35Text `xml:"TknChrtc,omitempty"`

	// Level of confidence resulting of the identification and authentication of the cardholder performed and the entity that performed it.
	TokenAssuranceLevel *Number `xml:"TknAssrncLvl,omitempty"`
}

func (c *CardPaymentToken2) AddTokenCharacteristic(value string) {
	c.TokenCharacteristic = append(c.TokenCharacteristic, (*Max35Text)(&value))
}

func (c *CardPaymentToken2) SetTokenAssuranceLevel(value string) {
	c.TokenAssuranceLevel = (*Number)(&value)
}

// Payment token information.
type CardPaymentToken3 struct {

	// Additional payment token information.
	TokenCharacteristic []*Max35Text `xml:"TknChrtc,omitempty"`

	// Identifier of a token provider requestor.
	TokenRequestor *PaymentTokenIdentifiers1 `xml:"TknRqstr,omitempty"`

	// Level of confidence resulting of the identification and authentication of the cardholder performed and the entity that performed it.
	TokenAssuranceLevel *Number `xml:"TknAssrncLvl,omitempty"`
}

func (c *CardPaymentToken3) AddTokenCharacteristic(value string) {
	c.TokenCharacteristic = append(c.TokenCharacteristic, (*Max35Text)(&value))
}

func (c *CardPaymentToken3) AddTokenRequestor() *PaymentTokenIdentifiers1 {
	c.TokenRequestor = new(PaymentTokenIdentifiers1)
	return c.TokenRequestor
}

func (c *CardPaymentToken3) SetTokenAssuranceLevel(value string) {
	c.TokenAssuranceLevel = (*Number)(&value)
}

// Payment token information.
type CardPaymentToken4 struct {

	// Surrogate value for the PAN.
	Token *Min8Max28NumericText `xml:"Tkn,omitempty"`

	// Identify a payment token inside a set of cards with the same PAN.
	CardSequenceNumber *Min2Max3NumericText `xml:"CardSeqNb,omitempty"`

	// Expiration date of the payment token that is generated by and maintained in the token vault.
	TokenExpiryDate *Max10Text `xml:"TknXpryDt,omitempty"`

	// Additional payment token information.
	TokenCharacteristic []*Max35Text `xml:"TknChrtc,omitempty"`

	// Identifier of a token provider requestor.
	TokenRequestor *PaymentTokenIdentifiers1 `xml:"TknRqstr,omitempty"`

	// Level of confidence resulting of the identification and authentication of the cardholder performed and the entity that performed it.
	TokenAssuranceLevel *Number `xml:"TknAssrncLvl,omitempty"`

	// Information about the identification and verification of the cardholder.
	TokenAssuranceData *Max500Binary `xml:"TknAssrncData,omitempty"`
}

func (c *CardPaymentToken4) SetToken(value string) {
	c.Token = (*Min8Max28NumericText)(&value)
}

func (c *CardPaymentToken4) SetCardSequenceNumber(value string) {
	c.CardSequenceNumber = (*Min2Max3NumericText)(&value)
}

func (c *CardPaymentToken4) SetTokenExpiryDate(value string) {
	c.TokenExpiryDate = (*Max10Text)(&value)
}

func (c *CardPaymentToken4) AddTokenCharacteristic(value string) {
	c.TokenCharacteristic = append(c.TokenCharacteristic, (*Max35Text)(&value))
}

func (c *CardPaymentToken4) AddTokenRequestor() *PaymentTokenIdentifiers1 {
	c.TokenRequestor = new(PaymentTokenIdentifiers1)
	return c.TokenRequestor
}

func (c *CardPaymentToken4) SetTokenAssuranceLevel(value string) {
	c.TokenAssuranceLevel = (*Number)(&value)
}

func (c *CardPaymentToken4) SetTokenAssuranceData(value string) {
	c.TokenAssuranceData = (*Max500Binary)(&value)
}
