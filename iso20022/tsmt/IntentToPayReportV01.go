package tsmt

import (
	"encoding/xml"

	"github.com/thought-machine/finance-messaging/iso20022"
)

type Document04600101 struct {
	XMLName xml.Name              `xml:"urn:iso:std:iso:20022:tech:xsd:tsmt.046.001.01 Document"`
	Message *IntentToPayReportV01 `xml:"InttToPayRpt"`
}

func (d *Document04600101) AddMessage() *IntentToPayReportV01 {
	d.Message = new(IntentToPayReportV01)
	return d.Message
}

// Scope
// The IntentToPayReport message is sent by the matching application to the two primary banks after receiving an IntentToPayNotification message.
// This message is a report per transaction that were referenced in the IntentToPayNotice message. For each transaction, the matching application has accumulated the amounts present in all previous IntentToPayNotice messages and reports the total.
// Usage
// The IntentToPayReport message is a report that is automatically generated by the matching application following an IntentToPayNotice message. No response is expected.
type IntentToPayReportV01 struct {

	// Identifies the report message.
	ReportIdentification *iso20022.MessageIdentification1 `xml:"RptId"`

	// Reports on the intention to pay per purchase order.
	ReportedItems []*iso20022.ReportLine1 `xml:"RptdItms,omitempty"`
}

func (i *IntentToPayReportV01) AddReportIdentification() *iso20022.MessageIdentification1 {
	i.ReportIdentification = new(iso20022.MessageIdentification1)
	return i.ReportIdentification
}

func (i *IntentToPayReportV01) AddReportedItems() *iso20022.ReportLine1 {
	newValue := new(iso20022.ReportLine1)
	i.ReportedItems = append(i.ReportedItems, newValue)
	return newValue
}
